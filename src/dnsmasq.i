%module dnsmasq
%{
#define SWIG_FILE_WITH_INIT
#include "config.h"
#undef _STDIO_H
#undef _GNU_SOURCE
// generated by grep -E '^(#|typedef)' dnsmasq.h > dnsmasq-defines.h
#include "dnsmasq-defines.h"

struct daemon { } daemon;
%}
// %include "dnsmasq.h"
%include "dnsmasq-defines.h"
%include "dns-protocol.h"
%include "dhcp-protocol.h"
%include "dhcp6-protocol.h"
%include "metrics.h"

#if 0
/* now create python code using those values as enumerators.
def dnsmasq_make_flags(name):
   return enum.Flag(name, dict([(i, v[i]) for i in vars(dnsmasq) if i.startswith(name+'_')]))

def dnsmasq_make_enum(name):
   return enum.Enum(name, dict([(i, v[i]) for i in vars(dnsmasq) if i.startswith(name+'_')]))

ACTOPM  = dnsmasq_make_enum("ACTION")
OPT     = dnsmasq_make_enum("OPT")
EVENT   = dnsmasq_make_enum("EVENT")
TXT_STAT= dnsmasq_make_enum("TXT_STAT")
T       = dnsmasq_make_flags("T")

AH      = dnsmasq_make_flags("AH")
CONFIG  = dnsmasq_make_flags("CONFIG")
CONTEXT = dnsmasq_make_flags("CONTEXT")
DHOPT   = dnsmasq_make_flags("DHOPT")
DNSSEC_FAIL = dnsmasq_make_flags("DNSSEC_FAIL")
DUMP    = dnsmasq_make_flags("DUMP")
F       = dnsmasq_make_flags("F")
FREC    = dnsmasq_make_flags("FREC")
LEASE   = dnsmasq_make_flags("LEASE")
INAME   = dnsmasq_make_flags("INAME")
IFACE   = dnsmasq_make_flags("IFACE")
SERV    = dnsmasq_make_flags("SERV")
*/
#endif
